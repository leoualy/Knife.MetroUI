<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Knife.MetroUI"
    xmlns:localConverter="clr-namespace:Knife.MetroUI.Converters">

    <!--MetroWindow-->
    <ControlTemplate x:Key="MetroWindow.Template" TargetType="local:MetroWindow">
        <Border Background="{TemplateBinding Background}">
            <Grid>
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <ContentControl Content="{TemplateBinding Dialog}"/>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style TargetType="{x:Type local:MetroWindow}">
        <Setter Property="Template" Value="{StaticResource MetroWindow.Template}"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="Background" Value="White"/>
    </Style>
    <!--MetroWindow-->

    <!--BaseMetroDialog-->
    <localConverter:ModalSetConverter x:Key="ModalSetConverter"/>
    <Style x:Key="Style.MetroBorder" TargetType="Border">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Opacity" Value="0.45"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <ControlTemplate x:Key="MetroDialog.Template" TargetType="local:BaseMetroDialog">
        <Grid Width="2560" Height="1080">
            <Border 
                Style="{StaticResource Style.MetroBorder}"
                Visibility="{TemplateBinding IsModality,
                Converter={StaticResource ModalSetConverter}}">
            </Border>

            <ContentPresenter
                HorizontalAlignment="Center"
                VerticalAlignment="Center"/>
        </Grid>
    </ControlTemplate>
    <Style TargetType="{x:Type local:BaseMetroDialog}">
        <Setter Property="Template" Value="{StaticResource MetroDialog.Template}"/>
    </Style>
    <!--BaseMetroDialog-->

    <!--MetroMessageBox-->
    <Style TargetType="{x:Type local:MetroMessageBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MetroMessageBox}">
                    <Border Background="{TemplateBinding Background}" 
                           Width="{TemplateBinding DialogWidth}" Height="{TemplateBinding DialogHeight}">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding MsgContent}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="White"/>
    </Style>
    <!--MetroMessageBox-->

    
    <ControlTemplate x:Key="MetroTabControl.Template" 
                     TargetType="{x:Type local:MetroTabControl}">
        <Grid x:Name="templateRoot" ClipToBounds="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="ColumnDefinition0" Width="270"/>
                <ColumnDefinition x:Name="ColumnDefinition1" Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition x:Name="RowDefinition0" Height="*"/>
            </Grid.RowDefinitions>
            <Border Grid.Column="0" CornerRadius="60">
                <StackPanel x:Name="headerPanel" Grid.RowSpan="2" Grid.Column="0" IsItemsHost="true"/>
            </Border>
            <Border CornerRadius="0,32,32,0" x:Name="contentPanel" Background="{TemplateBinding Background}" Grid.Column="1">
                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
            </Border>
        </Grid>


    </ControlTemplate>
    <Style TargetType="{x:Type local:MetroTabControl}">
        <Setter Property="Template" Value="{StaticResource MetroTabControl.Template}"/>
    </Style>
    
    

    
    

    <!--MetroTextBox-->
    <ControlTemplate x:Key="MetroTextBox.Template" 
                     TargetType="{x:Type local:MetroTextBox}">
        <Grid>
            <Border 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}"
                Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}">
                
                <ScrollViewer x:Name="PART_ContentHost"
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                    VerticalAlignment="Bottom"/>
            </Border>
            <TextBlock Name="txtWater"
                       Visibility="Collapsed"
                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                       VerticalAlignment="Bottom"
                       Text="{TemplateBinding WaterMark}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value=""/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="txtWater" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="txtWater" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>
    <Style TargetType="{x:Type local:MetroTextBox}">
        <Setter Property="Template" Value="{StaticResource MetroTextBox.Template}"/>
    </Style>
    <!--MetroTextBox-->

    <!--ButtonRound-->
    <localConverter:ScaleCenterConverter x:Key="ScaleCenterConverter"/>
    <ControlTemplate x:Key="ButtonRound.Template" 
                     TargetType="{x:Type local:ButtonRound}">
        <Border Name="border"
            Width="{TemplateBinding Width}" 
            Height="{TemplateBinding Height}"
            CornerRadius="{TemplateBinding RCornerRadius}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform x:Name="ScaleBorder" 
                                    CenterX="{Binding ElementName=border,
                        Path=Width,Converter={StaticResource ScaleCenterConverter}}" 
                                    CenterY="{Binding ElementName=border,
                        Path=Height,Converter={StaticResource ScaleCenterConverter}}" />
                </TransformGroup>
            </Border.RenderTransform>
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

        </Border>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="TouchDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                                        From="0.9"
                                        To="1"
                                        Duration="0:0:0.3"
                                        Storyboard.TargetName="ScaleBorder"
                                        Storyboard.TargetProperty="ScaleX"/>
                        <DoubleAnimation
                                        From="0.9"
                                        To="1"
                                        Duration="0:0:0.3"
                                        Storyboard.TargetName="ScaleBorder"
                                        Storyboard.TargetProperty="ScaleY"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type local:ButtonRound }">
        <Setter Property="Template" Value="{StaticResource ButtonRound.Template}"/>
    </Style>
    <!--ButtonRound-->
    
    <!--ButtonTile-->
    <ControlTemplate x:Key="ButtonTile.Template" TargetType="{x:Type local:ButtonTile}">
        <Border x:Name="border" BorderThickness="2"
                Background="{TemplateBinding Background}"
                Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="1" HorizontalAlignment="Left" Margin="20,0,0,20"
                           Text="{TemplateBinding Content}"
                           FontSize="{TemplateBinding FontSize}"
                           Foreground="{TemplateBinding Foreground}"
                           />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type local:ButtonTile}">
        <Setter Property="Template" Value="{StaticResource ButtonTile.Template}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <!--ButtonTile-->
    



</ResourceDictionary>
